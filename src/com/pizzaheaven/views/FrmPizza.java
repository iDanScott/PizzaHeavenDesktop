/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pizzaheaven.views;

import java.awt.BorderLayout;
import java.awt.event.WindowEvent;
import java.util.regex.Pattern;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import pizzaheaven.controllers.ImagesController;
import pizzaheaven.controllers.PizzaController;
import pizzaheaven.helpers.ImageHelpers;
import pizzaheaven.helpers.StringHelpers;
import pizzaheaven.models.Image;
import pizzaheaven.models.Pizza;
import pizzaheaven.models.Session;

/**
 *
 * @author dan
 */
public class FrmPizza extends javax.swing.JFrame {
    boolean modified = false;
    boolean editMode = false;
    /**
     * Creates new form FrmPizza
     */
    public FrmPizza() {
        initComponents();
        initialiseImageCombo();
    }
    
    public FrmPizza(Pizza pizza) {
        initComponents();
        editMode = true;
        txtPizzaName.setEnabled(false);
        this.txtPizzaName.setText(pizza.getName());
        this.txtPizzaDescription.setText(pizza.getDescription());
        String[] parts = pizza.getLargePrice().split(Pattern.quote("."));
        this.txtLargePricePound.setValue(Integer.valueOf(parts[0]));
        this.txtLargePricePence.setValue(Integer.valueOf(parts[1]));
        parts = pizza.getMediumPrice().split(Pattern.quote("."));
        this.txtMediumPricePound.setValue(Integer.valueOf(parts[0]));
        this.txtMediumPricePence.setValue(Integer.valueOf(parts[1]));
        parts = pizza.getSmallPrice().split(Pattern.quote("."));
        this.txtSmallPricePound.setValue(Integer.valueOf(parts[0]));
        this.txtSmallPricePence.setValue(Integer.valueOf(parts[1]));
        this.txtHeatRating.setValue(Double.valueOf(pizza.getHeatRating()));
        initialiseImageCombo();
        for (int i = 0; i < this.comboImages.getItemCount(); i++) {
            Image selectedImage = (Image)(Object)comboImages.getItemAt(i);
            if (selectedImage.getName().equals(pizza.getImage())) {
                comboImages.setSelectedIndex(i);
            }
        }
    }
    
    private void initialiseImageCombo() {
        JComboBox temp = new JComboBox(((ImagesController)Session.get().getController("ImagesController")).get());
        this.comboImages.setModel(temp.getModel());
    }
    
    private Image getSelectedImage() {
        Object selectedObject = (Object)this.comboImages.getSelectedItem();
        if (selectedObject instanceof Image) {
            return (Image)selectedObject;
        }
        return null;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        txtSmallPricePence = new javax.swing.JSpinner();
        txtMediumPricePence = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        txtLargePricePence = new javax.swing.JSpinner();
        txtPizzaName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPizzaDescription = new javax.swing.JTextField();
        comboImages = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHeatRating = new javax.swing.JSpinner();
        txtSmallPricePound = new javax.swing.JSpinner();
        txtMediumPricePound = new javax.swing.JSpinner();
        txtLargePricePound = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pnlImagePreview = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pizza Heaven - Manager Application - Pizza");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnSave.setText("Save ");
        btnSave.setToolTipText("Save & Close");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtSmallPricePence.setModel(new javax.swing.SpinnerNumberModel());

        txtMediumPricePence.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel1.setText("Pizza Name");

        txtLargePricePence.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtPizzaName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPizzaNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPizzaNameKeyTyped(evt);
            }
        });

        jLabel7.setText("Medium Pizza Price ");

        jLabel2.setText("Pizza Description");

        jLabel8.setText("Large Pizza Price ");

        txtPizzaDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPizzaDescriptionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPizzaDescriptionKeyTyped(evt);
            }
        });

        comboImages.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboImages.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboImagesItemStateChanged(evt);
            }
        });
        comboImages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboImagesActionPerformed(evt);
            }
        });

        jLabel3.setText("Small Pizza Price ");

        btnClose.setText("Cancel");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel4.setText("Pizza Heat Rating");

        jLabel6.setText("Image Name");
        jLabel6.setToolTipText("");

        txtHeatRating.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 3.0d, 1.0d));

        txtSmallPricePound.setModel(new javax.swing.SpinnerNumberModel());

        txtMediumPricePound.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtLargePricePound.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel5.setText("£");

        jLabel9.setText("£");

        jLabel10.setText("£");

        jLabel11.setText("p");

        jLabel12.setText("p");

        jLabel13.setText("p");

        pnlImagePreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlImagePreview.setPreferredSize(null);

        jLabel14.setText("Image Preview");
        jLabel14.setToolTipText("");

        btnUploadImage.setText("Upload Image...");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        jMenuBar1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jMenuBar1.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.foreground"));

        jMenu1.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.foreground"));
        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel5))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMediumPricePound)
                                            .addComponent(txtSmallPricePound)
                                            .addComponent(txtLargePricePound, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMediumPricePence, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(txtLargePricePence, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtSmallPricePence))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHeatRating, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(comboImages, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPizzaDescription)
                            .addComponent(txtPizzaName)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPizzaName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPizzaDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSmallPricePence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSmallPricePound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMediumPricePence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtMediumPricePound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLargePricePence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtLargePricePound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHeatRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboImages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUploadImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(pnlImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Pizza pizzaToAdd = new Pizza();
        pizzaToAdd.setDescription(this.txtPizzaDescription.getText());
        pizzaToAdd.setHeatRating(String.valueOf(this.txtHeatRating.getValue()));
        pizzaToAdd.setName(this.txtPizzaName.getText());
        pizzaToAdd.setSmallPrice(String.valueOf(this.txtSmallPricePound.getValue()) 
                + "." + StringHelpers.formatPence((Integer)this.txtSmallPricePence.getValue()));
        pizzaToAdd.setMediumPrice(String.valueOf(this.txtMediumPricePound.getValue())
                + "." + StringHelpers.formatPence((Integer)this.txtMediumPricePence.getValue()));
        pizzaToAdd.setLargePrice(String.valueOf(this.txtLargePricePound.getValue()) 
                + "." + StringHelpers.formatPence((Integer)this.txtLargePricePence.getValue()));
        pizzaToAdd.setImage(getSelectedImage().getName());
        int apiResult;
        if (!editMode) {
            apiResult = ((PizzaController)Session.get().getController("PizzaController")).add(pizzaToAdd);
        } else {
            apiResult = ((PizzaController)Session.get().getController("PizzaController")).update(pizzaToAdd);
        }
        if (apiResult == 201 || apiResult == 204) {
            int result = JOptionPane.showConfirmDialog(this, "Your Pizza " + pizzaToAdd.getName() + (apiResult == 201 ? " has been created" : "has been updated"), "Save Confirmation", JOptionPane.DEFAULT_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                modified = false;
                this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error contacting the API. Response code: " + apiResult + ". If the problem persists, please seek technical advice", "API Connectivity Error", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        if (modified) {
            int result = JOptionPane.showConfirmDialog(this, "You have unsaved changes. Are you sure you want to exit?", "Unsaved Changes", JOptionPane.YES_NO_OPTION);
            if (result != JOptionPane.YES_OPTION) {
                return;
            }
        }
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void comboImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboImagesActionPerformed
        // TODO add your handling code here:
        Image[] imageList = ((ImagesController)Session.get().getController("ImagesController")).get();
        pnlImagePreview.removeAll();
        for (Image image : imageList) {
            if (image.getName().equals(getSelectedImage().getName())) {
                JLabel temp = new JLabel();
                Icon icon = new ImageIcon(ImageHelpers.base64Decode(image));
                temp.setIcon(icon);
                pnlImagePreview.add(temp, BorderLayout.CENTER);
                pnlImagePreview.revalidate();
                pnlImagePreview.repaint();
            }
        }
        
    }//GEN-LAST:event_comboImagesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (modified) {
            int result = JOptionPane.showConfirmDialog(this, "You have unsaved changes Are you sure you want to exit?", "Unsaved Changes", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.NO_OPTION) {
                this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            } else {
                this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtPizzaNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPizzaNameKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtPizzaNameKeyPressed

    private void txtPizzaDescriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPizzaDescriptionKeyPressed
        // TODO add your handling code here:
        if (txtPizzaName.getText().length() >= 250) {
            evt.consume();
        } else {
            modified = true;
        }
    }//GEN-LAST:event_txtPizzaDescriptionKeyPressed

    private void txtPizzaNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPizzaNameKeyTyped
        // TODO add your handling code here:
        if (txtPizzaName.getText().length() >= 20) {
            evt.consume();
        } else {
            modified = true;
        }
    }//GEN-LAST:event_txtPizzaNameKeyTyped

    private void txtPizzaDescriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPizzaDescriptionKeyTyped
        // TODO add your handling code here:
        if (txtPizzaDescription.getText().length() >= 250) {
            evt.consume();
        } else {
            modified = true;
        }
    }//GEN-LAST:event_txtPizzaDescriptionKeyTyped

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:
        FrmImage frmImage = new FrmImage();
        frmImage.setVisible(true);
        this.setEnabled(false);
        
        
        frmImage.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                imageUploadFormClosed(evt);
            }
        });
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void imageUploadFormClosed(java.awt.event.WindowEvent evt) {
        this.setEnabled(true);
        this.initialiseImageCombo();
    }
    
    private void comboImagesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboImagesItemStateChanged
        // TODO add your handling code here:
        Pizza selectedPizza = ((PizzaController)Session.get().getController("PizzaController")).get(txtPizzaName.getText());
        if (selectedPizza != null) {
            if (!getSelectedImage().getName().equals(selectedPizza.getImage()))
                modified = true;
            else 
                modified = false;
        }
    }//GEN-LAST:event_comboImagesItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPizza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnClose;
    public javax.swing.JButton btnSave;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JComboBox<String> comboImages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel pnlImagePreview;
    private javax.swing.JSpinner txtHeatRating;
    private javax.swing.JSpinner txtLargePricePence;
    private javax.swing.JSpinner txtLargePricePound;
    private javax.swing.JSpinner txtMediumPricePence;
    private javax.swing.JSpinner txtMediumPricePound;
    private javax.swing.JTextField txtPizzaDescription;
    private javax.swing.JTextField txtPizzaName;
    private javax.swing.JSpinner txtSmallPricePence;
    private javax.swing.JSpinner txtSmallPricePound;
    // End of variables declaration//GEN-END:variables
}
