/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.pizzaheaven.views;

import java.awt.BorderLayout;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import pizzaheaven.controllers.ImagesController;
import pizzaheaven.helpers.ImageHelpers;
import pizzaheaven.models.Image;
import pizzaheaven.models.Session;

/**
 *
 * @author dan
 */
public class FrmImage extends javax.swing.JFrame {
    JFileChooser fc = new JFileChooser();
    String currentFile;
    BufferedImage originalImage;
    BufferedImage imageToUpload;
    boolean modified;

    /** Creates new form FrmImage */
    public FrmImage() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtWidth = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JSpinner();
        txtImageName = new javax.swing.JTextField();
        chkUseOriginal = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btnFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        txtDirectory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlPreview = new javax.swing.JPanel();
        lblWarning = new javax.swing.JLabel();
        btnReload = new javax.swing.JButton();
        btnUsePreferred = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pizza Heaven - Manager Application - Image Upload");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel4.setText("Dimensions");

        txtWidth.setModel(new javax.swing.SpinnerNumberModel(347, 0, null, 1));
        txtWidth.setEnabled(false);
        txtWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtWidthStateChanged(evt);
            }
        });

        jLabel5.setText("x");

        jLabel1.setText("Image Name");

        txtHeight.setModel(new javax.swing.SpinnerNumberModel(177, 0, null, 1));
        txtHeight.setEnabled(false);
        txtHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtHeightStateChanged(evt);
            }
        });

        chkUseOriginal.setSelected(true);
        chkUseOriginal.setText("Use Original");
        chkUseOriginal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkUseOriginalActionPerformed(evt);
            }
        });

        jLabel2.setText("Image File");

        btnFile.setText("Open File");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        jLabel3.setText("Image Preview");

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        pnlPreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(pnlPreview);

        lblWarning.setText("<html><span color=\"red\">Warning!</span> Preferred size of product images is 347x177</html>");

        btnReload.setText("<html><center>Reload<br />Image</center></html>");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        btnUsePreferred.setText("<html><center>Use Preferred<br/> Dimensions</center></html>");
        btnUsePreferred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsePreferredActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkUseOriginal))
                            .addComponent(lblWarning, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtImageName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDirectory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFile))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUsePreferred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpload)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtImageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnFile)
                    .addComponent(txtDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkUseOriginal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUsePreferred, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 180, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkUseOriginalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkUseOriginalActionPerformed
        // TODO add your handling code here:
        txtWidth.setEnabled(!chkUseOriginal.isSelected());
        txtHeight.setEnabled(!chkUseOriginal.isSelected());
        if (chkUseOriginal.isSelected() && originalImage != null) {
            txtWidth.setValue(originalImage.getWidth());
            txtHeight.setValue(originalImage.getHeight());
        }
    }//GEN-LAST:event_chkUseOriginalActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        // TODO add your handling code here:
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            modified = true;
            try {
                this.txtDirectory.setText(fc.getSelectedFile().getAbsolutePath());
                currentFile = fc.getSelectedFile().getAbsolutePath();
                previewImage();

                System.out.println("Opening: " + fc.getSelectedFile().getName() + ".\n\r");
            } catch (Exception e) {
                System.out.println("[ERR] Error occured during file opening: " + e.getMessage());
            }
        } else {
            System.out.println("Open command cancelled by user.\n\r");
        }
    }//GEN-LAST:event_btnFileActionPerformed

    private void previewImage() {
        try {
            if (currentFile != null && !currentFile.equals("")) {
                pnlPreview.removeAll();
                originalImage = ImageIO.read(new File(currentFile));
                if (chkUseOriginal.isSelected()) {
                    imageToUpload = originalImage;
                    txtWidth.setValue(imageToUpload.getWidth());
                    txtHeight.setValue(imageToUpload.getHeight());
                } else {
                    imageToUpload = ImageHelpers.resize(originalImage, (int)txtWidth.getValue(), (int)txtHeight.getValue());
                }
                ImageIcon icon = new ImageIcon(imageToUpload);
                JLabel imgLabel = new JLabel();
                imgLabel.setIcon(icon);
                pnlPreview.add(imgLabel, BorderLayout.CENTER);
                pnlPreview.revalidate();
                pnlPreview.repaint();
            }
        } catch (Exception e) {
            System.out.println("[ERR] " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Invalid file", "Invalid file selection", JOptionPane.ERROR);
        }
    }
    
    private void checkDimensions() {
        if ((Integer)txtWidth.getValue() != 347 || (Integer)txtHeight.getValue() != 177) {
            lblWarning.setVisible(true);
        } else { 
            lblWarning.setVisible(false);
        }
    }
    
    private void txtWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtWidthStateChanged
        // TODO add your handling code here:
        checkDimensions();
        modified = true;
    }//GEN-LAST:event_txtWidthStateChanged

    private void txtHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtHeightStateChanged
        // TODO add your handling code here:
        checkDimensions();
        modified = true;
    }//GEN-LAST:event_txtHeightStateChanged

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        // TODO add your handling code here:
        previewImage();
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnUsePreferredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsePreferredActionPerformed
        // TODO add your handling code here:
        this.chkUseOriginal.setSelected(false);
        this.txtWidth.setValue(347);
        this.txtHeight.setValue(177);
        previewImage();
    }//GEN-LAST:event_btnUsePreferredActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (modified) {
            int result = JOptionPane.showConfirmDialog(this, "You have unsaved changes. Are you sure you wish to Exit?", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            } else {
                this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        }
       
    }//GEN-LAST:event_formWindowClosing
    
    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        Image image = new Image();
        image.setName(txtImageName.getText());
        image.setBase64(ImageHelpers.base64Encode(imageToUpload));
        int result = ((ImagesController)Session.get().getController("ImagesController")).add((Object)image);
        if (result == 201 || result == 204) {
            JOptionPane.showMessageDialog(this, "Your Staff Member " + image.getName() + (result == 201 ? " has been saved" : " has been updated"), "Save Confirmation", JOptionPane.OK_OPTION);
            modified = false;
            this.dispose();
        }else {
            JOptionPane.showMessageDialog(this, "Error contacting the API. Response code: " + result + ". If the problem persists, please seek technical advice", "API Connectivity Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmImage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFile;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton btnUsePreferred;
    private javax.swing.JCheckBox chkUseOriginal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JPanel pnlPreview;
    private javax.swing.JTextField txtDirectory;
    private javax.swing.JSpinner txtHeight;
    private javax.swing.JTextField txtImageName;
    private javax.swing.JSpinner txtWidth;
    // End of variables declaration//GEN-END:variables

}
